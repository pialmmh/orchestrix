version: "3.8"

# Grafana Loki Stack for Orchestrix Observability
# Includes: Loki (logs), Prometheus (metrics), Grafana (visualization), Tempo (tracing)

networks:
  monitoring:
    name: orchestrix-monitoring
    driver: bridge

volumes:
  loki-data:
  prometheus-data:
  grafana-data:
  tempo-data:

services:
  # ============================================
  # LOKI - Log Aggregation
  # ============================================
  loki:
    image: grafana/loki:2.9.3
    container_name: orchestrix-loki
    restart: unless-stopped
    ports:
      - "3100:3100"  # Loki HTTP API
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./configs/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # PROMTAIL - Log Collector
  # ============================================
  promtail:
    image: grafana/promtail:2.9.3
    container_name: orchestrix-promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./configs/promtail-config.yaml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      - loki

  # ============================================
  # PROMETHEUS - Metrics Collection
  # ============================================
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: orchestrix-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"  # Prometheus HTTP API & UI
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./configs/alerts.yml:/etc/prometheus/alerts.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # GRAFANA - Visualization & Dashboards
  # ============================================
  grafana:
    image: grafana/grafana:10.2.2
    container_name: orchestrix-grafana
    restart: unless-stopped
    ports:
      - "7000:3000"  # Grafana UI
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=orchestrix123
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel
      - GF_SERVER_ROOT_URL=http://localhost:7000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - monitoring
    depends_on:
      - loki
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # TEMPO - Distributed Tracing (Optional)
  # ============================================
  tempo:
    image: grafana/tempo:2.3.1
    container_name: orchestrix-tempo
    restart: unless-stopped
    ports:
      - "3200:3200"   # Tempo HTTP API
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "14268:14268" # Jaeger ingest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./configs/tempo.yaml:/etc/tempo.yaml:ro
      - tempo-data:/tmp/tempo
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # NODE EXPORTER - Host Metrics
  # ============================================
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: orchestrix-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring