#!/bin/bash
# FusionPBX LXC Container Configuration File
# This file can be placed anywhere in the filesystem and passed to build/launch scripts

# ==================== Base Image Configuration ====================
# Name for the base image (used by both build and launch scripts)
BASE_IMAGE_NAME="fusion-pbx-base"

# Base user for the container
BASE_IMAGE_USER="ubuntu"

# ==================== Container Configuration ====================
# Name for the running container instance
CONTAINER_NAME="fusion-pbx-dev"

# Static IP address for the container (optional)
# Leave empty for DHCP assignment
# CONTAINER_IP="10.10.10.50"

# ==================== Mount Points ====================
# All mount points are optional - container will work without them

# Workspace directory to mount (for development files)
# This will be mounted at /workspace in the container
# WORKSPACE_MOUNT="/home/user/projects/voip-workspace"

# Configuration directory (automatically mounted at /mnt/config)
# The directory containing this config file will be mounted automatically

# PostgreSQL data directory for persistence
# This will be mounted at /var/lib/postgresql in the container
# DATA_MOUNT="./data/postgresql"

# FreeSWITCH configuration directory
# This will be mounted at /etc/freeswitch in the container
# FREESWITCH_CONF_MOUNT="./data/freeswitch-conf"

# FusionPBX application directory
# This will be mounted at /var/www/fusionpbx in the container
# FUSIONPBX_APP_MOUNT="./data/fusionpbx-app"

# ==================== Service Configuration ====================
# PostgreSQL password (optional)
# If set, will configure the postgres user password
# DB_PASSWORD="secure_password_here"

# FusionPBX admin password for first-time setup
# ADMIN_PASSWORD="admin_password_here"

# FreeSWITCH SIP Profile Configuration
# Internal IP for SIP profiles (usually the container IP)
# SIP_PROFILE_INTERNAL_IP="10.10.10.50"

# External IP for SIP profiles (your public IP or NAT address)
# SIP_PROFILE_EXTERNAL_IP="203.0.113.1"

# ==================== SSH Tunnel Configuration ====================
# Optional SSH tunnels for accessing remote services
# All SSH tunnel parameters must be set for tunnels to be created

# SSH tunnel host
# SSH_TUNNEL_HOST="remote.server.com"

# SSH tunnel user
# SSH_TUNNEL_USER="tunnel-user"

# SSH key path (optional, will use password auth if not provided)
# SSH_KEY_PATH="/home/user/.ssh/tunnel_key"

# SSH tunnel port mappings
# Format: local_port:remote_host:remote_port
# Multiple mappings separated by commas
# Examples:
#   - "5432:localhost:5432" - PostgreSQL tunnel
#   - "3306:localhost:3306" - MySQL tunnel
#   - "6379:localhost:6379" - Redis tunnel
#   - "5432:localhost:5432,3306:localhost:3306" - Multiple tunnels
# SSH_TUNNEL_PORTS="5432:localhost:5432"

# ==================== Network Configuration ====================
# DNS servers (optional)
# DNS_SERVERS="8.8.8.8,8.8.4.4"

# ==================== Advanced Configuration ====================
# Memory limit for the container (optional)
# MEMORY_LIMIT="2GB"

# CPU limit for the container (optional)
# CPU_LIMIT="2"

# ==================== Notes ====================
# - All paths can be absolute or relative to the config file location
# - Container will start successfully even if optional services are not configured
# - SSH into container: ssh ubuntu@<container-ip> (default password: debian)
# - Web interface: http://<container-ip>
# - First-time setup: http://<container-ip>/install.php
# - FreeSWITCH CLI: fs_cli (from within container)
# - PostgreSQL: psql -U postgres (from within container)