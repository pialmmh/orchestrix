#!/bin/bash
# Sample Development Environment Configuration
# Copy and modify this file for your needs

# ============================================================================
# SSH CLIENT CONFIGURATION (AUTO-CONFIGURED IN CONTAINER)
# ============================================================================
# The container's SSH client is pre-configured for dev environment:
# - StrictHostKeyChecking no      (Auto-accepts any certificate)
# - UserKnownHostsFile /dev/null  (Doesn't save/check host keys)
# - CheckHostIP no                 (Doesn't verify IP matches hostname)
# - LogLevel ERROR                 (Only shows errors, no warnings)
# This means:
# ✓ No prompts for accepting new host certificates
# ✓ No warnings about changed host keys
# ✓ Connects immediately to any server without confirmation
# ============================================================================

# Container name
CONTAINER_NAME=dev-env

# Auto-start SSH tunnels (if configured below)
AUTO_START_TUNNELS=false

# Environment variables
CONTAINER_ENV_VARS=(
    "LOG_LEVEL=info"
    "ENVIRONMENT=development"
)

# Bind mounts (optional)
# Mount your project directories, logs, configs as needed
BIND_MOUNTS=(
    # "/home/user/projects:/workspace"
    # "/opt/logs/dev-env:/var/log"
)

# OPTIONAL: SSH Tunnel Configuration
# You can configure SSH tunnels to remote services if needed
# Leave empty if you don't need SSH tunnels

# Option 1: Inline tunnel definitions
# Format: Service|RemoteServer|RemotePort|LocalPort|SSHUser|SSHPassword|SSHPort|Description
# TUNNELS=(
#     "Kafka|103.95.96.76|9092|9092|telcobright|password|22|Apache Kafka"
#     "MySQL|103.95.96.77|3306|3306|root|password|22|MySQL Database"
#     "Redis|103.95.96.76|6379|6379|user|password|22|Redis Cache"
# )

# Option 2: External tunnel config file
# TUNNEL_CONFIG=/path/to/your/tunnels.conf