# Tunnel Gateway Configuration
# This file defines SSH tunnels for accessing remote services

# Container Configuration
CONTAINER_NAME="tunnel-gateway-dev"
CONTAINER_IP="10.10.199.150"  # Static IP from LXC private range

# SSH Tunnel Definitions
# ========================================================================================
# Format: NAME:LOCAL_PORT:SSH_HOST:SSH_USER:AUTH_TYPE:AUTH_VALUE:REMOTE_HOST:REMOTE_PORT
#
# Field Guide:
#   1. NAME          - Friendly name (e.g., mysql-prod, kafka-staging)
#   2. LOCAL_PORT    - Port on THIS container (what your code connects to)
#   3. SSH_HOST      - Server to SSH into (IP or hostname)
#   4. SSH_USER      - SSH username on remote server
#   5. AUTH_TYPE     - PASSWORD or KEY
#   6. AUTH_VALUE    - Your SSH password OR path to SSH key file ‚Üê PUT CREDENTIALS HERE
#   7. REMOTE_HOST   - Where service runs (usually "localhost" or "127.0.0.1")
#   8. REMOTE_PORT   - Port of the actual service on remote server
#
# ========================================================================================

TUNNELS=(
    # ================================================================================
    # Example 1: MySQL Production - Password Authentication
    # ================================================================================
    # Scenario: MySQL on 192.168.1.100, SSH user is "devuser", password is "Dev@2024"
    # Your Java code connects to: jdbc:mysql://10.10.199.150:3306/mydb
    #
    "mysql-prod:3306:192.168.1.100:devuser:PASSWORD:Dev@2024:localhost:3306"
    #            ^^^^  ^^^^^^^^^^^^^^ ^^^^^^^ ^^^^^^^^ ^^^^^^^^^          ^^^^
    #            |     |              |       |        |                  |
    #            |     |              |       |        SSH Password       Real MySQL port
    #            |     |              |       PASSWORD auth type
    #            |     |              SSH username on 192.168.1.100
    #            |     Server to SSH into
    #            Port your app uses (on this container)


    # ================================================================================
    # Example 2: Kafka Staging - SSH Key Authentication
    # ================================================================================
    # Scenario: Kafka on kafka.staging.internal, use SSH key /home/user/.ssh/kafka_id_rsa
    # Your Java code uses: bootstrap.servers=10.10.199.150:9092
    #
    # "kafka-staging:9092:kafka.staging.internal:kafkauser:KEY:/home/user/.ssh/kafka_id_rsa:localhost:9092"
    #                ^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^ ^^^^^^^^^ ^^^ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        ^^^^
    #                |     |                        |         |   |                                     |
    #                |     |                        |         |   Path to SSH private key file         Kafka port
    #                |     |                        |         KEY auth type
    #                |     |                        SSH username
    #                |     Server hostname/IP
    #                Port your app uses


    # ================================================================================
    # Example 3: PostgreSQL with SSH Key (mounted via BIND_MOUNTS)
    # ================================================================================
    # "postgres-prod:5432:10.20.30.40:pgadmin:KEY:/keys/postgres_key:127.0.0.1:5432"
    #                ^^^^  ^^^^^^^^^^^^ ^^^^^^^ ^^^ ^^^^^^^^^^^^^^^^^^ ^^^^^^^^^^^ ^^^^
    #                                                    |
    #                                   Key mounted from host via BIND_MOUNTS below


    # ================================================================================
    # More Examples (Uncomment and modify as needed)
    # ================================================================================

    # Redis Production with password
    # "redis-prod:6379:redis.company.com:redisuser:PASSWORD:R3dis@Pass:localhost:6379"

    # MongoDB with SSH key
    # "mongo-prod:27017:mongo.company.com:mongouser:KEY:/keys/mongo_key:localhost:27017"

    # Zookeeper ensemble
    # "zookeeper:2181:zk1.company.com:zkadmin:PASSWORD:zk@Pass123:localhost:2181"
)

# ========================================================================================
# QUICK REFERENCE: Common Services Default Ports
# ========================================================================================
# MySQL/MariaDB:    3306
# PostgreSQL:       5432
# MongoDB:          27017
# Redis:            6379
# Kafka:            9092
# Zookeeper:        2181
# Elasticsearch:    9200
# RabbitMQ:         5672
# ========================================================================================

# Optional: Bind mounts for SSH keys
# Format: host_path:container_path
BIND_MOUNTS=(
    # "/home/mustafa/.ssh:/keys:ro"  # Mount SSH keys read-only
)

# Auto-start tunnels on container boot
AUTO_START="true"
