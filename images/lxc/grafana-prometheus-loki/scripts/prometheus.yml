# Prometheus Configuration
# OmniQueue-ready with service discovery

global:
  scrape_interval: ${PROMETHEUS_SCRAPE_INTERVAL}
  evaluation_interval: ${PROMETHEUS_EVALUATION_INTERVAL}
  external_labels:
    monitor: 'omniqueue-monitor'
    environment: 'production'

# Alertmanager configuration (optional)
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Load rules once and periodically evaluate them
rule_files:
  # - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:${PROMETHEUS_PORT}']
        labels:
          service: 'prometheus'
          component: 'core'

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['localhost:${GRAFANA_PORT}']
        labels:
          service: 'grafana'
          component: 'visualization'

  # Loki metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['localhost:${LOKI_PORT}']
        labels:
          service: 'loki'
          component: 'logs'

  # Node exporter (if installed)
  - job_name: 'node'
    static_configs:
      - targets: ['localhost:9100']
        labels:
          service: 'node-exporter'
          component: 'system-metrics'

  # Application metrics (OmniQueue applications)
  # Add your application endpoints here
  - job_name: 'applications'
    static_configs:
      - targets: []
        labels:
          service: 'application'
          component: 'business-logic'

    # Relabel to support distributed tracing correlation
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__meta_consul_service]
        target_label: app
        regex: (.+)
