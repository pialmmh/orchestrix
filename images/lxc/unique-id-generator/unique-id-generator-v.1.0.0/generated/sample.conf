# Unique ID Generator v1.0.0 - Configuration
# Snowflake ID generation with sharding support

# Container identification
CONTAINER_NAME="uid-gen-v1"
BASE_IMAGE="unique-id-generator-base"

# Network configuration
BRIDGE_NAME="lxdbr0"
# CONTAINER_IP="10.10.199.51"  # Optional: Fixed IP

# Service configuration
SERVICE_PORT="8080"
DATA_DIR="/var/lib/unique-id-generator"
LOG_LEVEL="info"

# ====================================
# SHARD CONFIGURATION (RUNTIME)
# ====================================
# These values are set at container launch time
# to enable distributed ID generation

# Shard ID for this instance (must be unique across cluster)
SHARD_ID=1

# Total number of shards in the cluster
TOTAL_SHARDS=1

# Snowflake IDs are always time-ordered and shard-aware
# Sequential IDs use interleaved distribution

# ====================================
# BIND MOUNTS (Optional)
# ====================================
# Uncomment to persist data on host

# Mount data directory from host
# HOST_DATA_DIR="/data/unique-id-generator/shard1"

# Mount log directory from host
# HOST_LOG_DIR="/var/log/containers/unique-id-generator/shard1"

# ====================================
# EXAMPLES FOR MULTI-SHARD SETUP
# ====================================
# For a 3-shard setup, create 3 config files:
#
# shard1.cnf:
#   CONTAINER_NAME="uid-generator-shard1"
#   CONTAINER_IP="10.10.199.51/24"
#   SHARD_ID=1
#   TOTAL_SHARDS=3
#
# shard2.cnf:
#   CONTAINER_NAME="uid-generator-shard2"
#   CONTAINER_IP="10.10.199.52/24"
#   SHARD_ID=2
#   TOTAL_SHARDS=3
#
# shard3.cnf:
#   CONTAINER_NAME="uid-generator-shard3"
#   CONTAINER_IP="10.10.199.53/24"
#   SHARD_ID=3
#   TOTAL_SHARDS=3
#
# Then launch each:
#   ./launchUniqueIdGenerator.sh shard1.cnf
#   ./launchUniqueIdGenerator.sh shard2.cnf
#   ./launchUniqueIdGenerator.sh shard3.cnf
#
# Each shard will generate non-overlapping IDs:
# - Shard 1: 1, 4, 7, 10, ...
# - Shard 2: 2, 5, 8, 11, ...
# - Shard 3: 3, 6, 9, 12, ...